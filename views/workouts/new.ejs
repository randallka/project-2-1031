<%- include('../partials/header') %>
<br>
<div class="container-md">
    <div class="container text-center">
        <h1>Create a workout</h1>
    </div>
    <br>
<form action="/workouts" method="POST">
    <div class="accordion accordion-flush">
        <div class="accordion-item">
          <h2 class="accordion-header">
            <button class="accordion-button collapsed fs-2 bg-light" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
              Add Exercises
            </button>
          </h2>
          <div id="flush-collapseOne" class="accordion-collapse collapse">
            <div class="accordion-body">
                <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for exercises..">
                <ul id="sortlist">
                    <% exercises.forEach(exercise => { %>
                    <li><label><%= exercise.name %></label>
                        <input type="checkbox" name="exercise:<%= exercise.id %>">
                        <input type="text" placeholder="Sets/Reps/Time" name="exercise:<%= exercise.id %>">
                    </li>
                    <% }) %>
                  </ul>
            </ul>
            </div>
          </div>
        </div>
      </div>
      <br>
      <div class="container-fluid">
        <h3>Can't find the right exercises? Create them <a href="/exercises/new">here</a></h3>
      </div>
      <br>
    <div class="mb-3">
        <label class="form-label">Workout Name</label>
        <input type="text" name="name" class="form-control"
            placeholder="Name your Workout">
    </div>
    <div class="mb-3">
        <label class="form-label">Description</label>
        <textarea name="description" class="form-control" rows="3" placeholder="Tell us about your workout!"></textarea>
    </div>
    <div>
        <label class="form-label">Difficulty</label>
        <select name="difficulty" class="form-select">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
          </select>
    </div>
    <br>
    <br>
    <input type="submit" value="Create Workout">
  </form>
</div>
<script>
    function myFunction() {
      var input, filter, ul, li, label, i, txtValue;
      input = document.getElementById('myInput');
      filter = input.value.toUpperCase();
      ul = document.getElementById("sortList");
      li = ul.getElementsByTagName('li');
      for (i = 0; i < li.length; i++) {
        label = li[i].getElementsByTagName("label")[0];
        txtValue = label.textContent || label.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          li[i].style.display = "";
        } else {
          li[i].style.display = "none";
        }
      }
    }

    function slist (target) {
  // (A) SET CSS + GET ALL LIST ITEMS
  target.classList.add("slist");
  let items = target.getElementsByTagName("li"), current = null;

  // (B) MAKE ITEMS DRAGGABLE + SORTABLE
  for (let i of items) {
    // (B1) ATTACH DRAGGABLE
    i.draggable = true;
    
    // (B2) DRAG START - YELLOW HIGHLIGHT DROPZONES
    i.ondragstart = (ev) => {
      current = i;
      for (let it of items) {
        if (it != current) { it.classList.add("hint"); }
      }
    };
    
    // (B3) DRAG ENTER - RED HIGHLIGHT DROPZONE
    i.ondragenter = (ev) => {
      if (i != current) { i.classList.add("active"); }
    };

    // (B4) DRAG LEAVE - REMOVE RED HIGHLIGHT
    i.ondragleave = () => {
      i.classList.remove("active");
    };

    // (B5) DRAG END - REMOVE ALL HIGHLIGHTS
    i.ondragend = () => { for (let it of items) {
        it.classList.remove("hint");
        it.classList.remove("active");
    }};
 
    // DRAG OVER - PREVENT THE DEFAULT "DROP", SO WE CAN DO OUR OWN
    i.ondragover = (evt) => { evt.preventDefault(); };
 
    // ON DROP - DO SOMETHING
    i.ondrop = (evt) => {
      evt.preventDefault();
      if (i != current) {
        let currentpos = 0, droppedpos = 0;
        for (let it=0; it<items.length; it++) {
          if (current == items[it]) { currentpos = it; }
          if (i == items[it]) { droppedpos = it; }
        }
        if (currentpos < droppedpos) {
          i.parentNode.insertBefore(current, i.nextSibling);
        } else {
          i.parentNode.insertBefore(current, i);
        }
      }
    };
  }
}

window.addEventListener("DOMContentLoaded", () => {
  slist(document.getElementById("sortlist"));
});
    </script>
<%- include('../partials/footer') %>